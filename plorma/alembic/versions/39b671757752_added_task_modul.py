"""Added task modul

Revision ID: 39b671757752
Revises: 5efa67d0e81
Create Date: 2015-02-01 21:25:55.324721

"""

# revision identifiers, used by Alembic.
revision = '39b671757752'
down_revision = '5efa67d0e81'

from alembic import op
import sqlalchemy as sa


INSERTS = """INSERT INTO "modules" VALUES (1000,'tasks','plorma.model.task.Task','Task','Tasks', NULL, '%s|id','header-menu','0e77a62908fc4358a09f9c6e307e9b87', NULL)
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (106, 1000, 'List', 'list', 'icon-list-alt', 'd381f2bcaa2449bda78f7149742449c8', '0')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (107, 1000, 'Create', 'create', 'icon-plus', '8fc504b3f1154cab8b475591f9863675', '0')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (108, 1000, 'Read', 'read/{id}', 'icon-eye-open', '5bbc95faca404e13824b2f02bc1c95cd', '0')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (109, 1000, 'Update', 'update/{id}', 'icon-edit', '0fc5466e192f438db81495cff5c745d2', '0')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (110, 1000, 'Delete', 'delete/{id}', 'icon-eye-delete', 'a01c0a2f8d6448f5aa30b0094105e116', '1')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (111, 1000, 'Import', 'import', 'icon-import', '23df98e564d64f4ebcd66a25e5858676', '0')
INSERT INTO "actions" (id, mid, name, url, icon, uuid, bundle) VALUES (112, 1000, 'Export', 'export/{id}', 'icon-export', '3cd4d8fb223345cbb56eedc18f3d7ad6', '1')"""
DELETES = """"""


def iter_statements(stmts):
    for st in [x for x in stmts.split('\n') if x]:
        op.execute(st)


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tasks',
    sa.Column('uuid', sa.CHAR(length=32), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('uid', sa.Integer(), nullable=True),
    sa.Column('gid', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['gid'], ['usergroups.id'], ),
    sa.ForeignKeyConstraint(['uid'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###
    iter_statements(INSERTS)


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    ### end Alembic commands ###
    iter_statements(DELETES)
